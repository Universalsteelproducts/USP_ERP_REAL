<?xml version="1.0" encoding="UTF-8" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://ofbiz.apache.org/Simple-Method" xsi:schemaLocation="http://ofbiz.apache.org/Simple-Method http://ofbiz.apache.org/dtds/simple-methods.xsd">

	<simple-method method-name="successMessage" short-description="Display success message when no error messages are found.">
		<set field="errorMessageListSize" value="${groovy:if(parameters.errorMessageList != null)return(parameters.errorMessageList.size());}"  type="Integer" default-value="0"/>
		<if-compare field="errorMessageListSize" operator="equals" value="0">
			<if-empty field="parameters.successMessageList">
				<property-to-field resource="UspErpUiLabels" property="UpdatedSuccess" field="defaultSuccessMessage"/>
				<string-to-list string="${defaultSuccessMessage}" list="parameters.successMessageList"/>
			</if-empty>
			<field-to-result field="parameters.successMessageList" result-name="uspErpSuccessMessageList"/>
			<field-to-result field="parameters.warningMessageList" result-name="warningMessageList"/>
		</if-compare>
	</simple-method>

	<simple-method method-name="createEmailTemplate" short-description="Create Email Template">
		<if-empty field="parameters.contentId">
			<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentIdError"/>
			<string-to-list string="${tempErrorMessage}" message-field="contentId" list="error_list"/>
			<else>
				<set field="contentIdLength" value="20" type="Integer"/>
				<set field="spaceReplacement" value=" " type="String"/>
				<set field="makeUpCase" value="true" type="Boolean"/>
				<call-class-method class-name="util.UspErpCommonUtil"  method-name="makeValidId" ret-field="contentId">
					<field field="parameters.contentId" type="String"/>
					<field field="contentIdLength" type="Integer"/>
					<field field="spaceReplacement" type="String"/>
					<field field="makeUpCase" type="boolean"/>
				</call-class-method>
				<if-empty field="contentId">
					<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentIdLengthError"/>
					<string-to-list string="${tempErrorMessage}" message-field="contentId" list="error_list"/>
					<else>
						<entity-one entity-name="Content" value-field="existingContent"/>
						<if-not-empty field="existingContent">
							<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentIdExistError"/>
							<string-to-list string="${tempErrorMessage}" message-field="contentId" list="error_list"/>
							<else>
								<call-class-method class-name="util.UspErpCommonUtil"  method-name="isValidId" ret-field="isValidId">
									<field field="parameters.contentId"/>
								</call-class-method>
								<if-compare field="isValidId" operator="equals" value="false">
									<set field="errorKey" from-field="parameters.contentId"/>
									<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="ValidIdError"/>
									<string-to-list string="${tempErrorMessage}" message-field="contentId" list="error_list"/>
								</if-compare>
								<set field="parameters.contentId" from-field="contentId"/>
							</else>
						</if-not-empty>
					</else>
				</if-empty>
			</else>
		</if-empty>

		<if-empty field="parameters.contentName">
			<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentNameError"/>
			<string-to-list string="${tempErrorMessage}" message-field="contentName" list="error_list"/>
		</if-empty>

		<if-empty field="parameters.description">
			<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentDescriptionError"/>
			<string-to-list string="${tempErrorMessage}" message-field="description" list="error_list"/>
		</if-empty>

		<if-compare operator="equals" value="ELECTRONIC_TEXT" field="parameters.dataResourceTypeId">
			<if-empty field="parameters.textData">
				<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentTextDataError"/>
				<string-to-list string="${tempErrorMessage}" message-field="textData" list="error_list"/>
			</if-empty>
		</if-compare>

		<if-compare operator="equals" value="CONTEXT_FILE" field="parameters.dataResourceTypeId">
			<if-empty field="parameters.objectInfo">
				<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="FileReferenceBlankError"/>
				<string-to-list string="${tempErrorMessage}" message-field="objectInfo" list="error_list"/>
				<else>
					<call-class-method class-name="java.lang.System" method-name="getProperty" ret-field="ofbizHome">
						<string value="ofbiz.home"/>
					</call-class-method>
					<set field="baseDir" from-field="ofbizHome" type="String"/>
					<string-append field="baseDir" string="/specialpurpose"/>
					<string-append field="baseDir" string="/uspErp/webapp/uspErp"/>
					<create-object class-name="java.io.File" field="contentFile">
						<field field="baseDir" type="String"/>
						<field field="parameters.objectInfo" type="String"/>
					</create-object>

					<call-object-method method-name="exists" obj-field="contentFile" ret-field="isContentFileExists"/>
					<if-compare operator="equals" value="false" field="isContentFileExists" type="Boolean">
						<clear-field field="argListNames"/>
						<set field="argListNames[]" from-field="parameters.objectInfo"/>
						<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentFileNotExistError" arg-list-name="argListNames"/>
						<string-to-list string="${tempErrorMessage}" message-field="objectInfo" list="error_list"/>
					</if-compare>
				</else>
			</if-empty>
		</if-compare>

		<check-errors/>

		<if-compare operator="equals" value="ELECTRONIC_TEXT" field="parameters.dataResourceTypeId">
			<set-service-fields service-name="createTextContent" map="parameters" to-map="createTextContentCtx"/>
			<set field="createTextContentCtx.dataResourceTypeId" value="ELECTRONIC_TEXT"/>
			<set field="createTextContentCtx.dataTemplateTypeId" value="FTL"/>
			<set field="createTextContentCtx.contentTypeId" from-field="parameters.contentTypeId"/>
			<if-not-empty field="parameters.locale">
				<set field="createTextContentCtx.localeString" from-field="parameters.locale" type="String"/>
			</if-not-empty>
			<set field="createTextContentCtx.mapKey" value="link"/>
			<set field="createTextContentCtx.contentPurposeTypeId"  value="SECTION"/>
			<set field="createTextContentCtx.mimeTypeId"  value="text/html"/>
			<call-service service-name="createTextContent" in-map-name="createTextContentCtx"/>
		</if-compare>

		<if-compare operator="equals" value="CONTEXT_FILE" field="parameters.dataResourceTypeId">
			<set-service-fields service-name="createDataResource" map="parameters" to-map="createDataResourceCtx"/>
			<set field="createDataResourceCtx.dataTemplateTypeId" value="FTL"/>
			<call-service service-name="createDataResource" in-map-name="createDataResourceCtx">
				<result-to-field result-name="dataResourceId" field="parameters.generatedDataResourceId"/>
			</call-service>

			<set-service-fields service-name="createContentFromDataResource" map="parameters" to-map="createContentFromDataResourceCtx"/>
			<set field="createContentFromDataResourceCtx.dataResourceId" from-field="parameters.generatedDataResourceId"/>
			<set field="createContentFromDataResourceCtx.contentTypeId" from-field="parameters.contentTypeId"/>
			<if-not-empty field="parameters.locale">
				<set field="createContentFromDataResourceCtx.localeString" from-field="parameters.locale" type="String"/>
			</if-not-empty>
			<set field="createContentFromDataResourceCtx.contentPurposeTypeId" value="SECTION"/>
			<call-service service-name="createContentFromDataResource" in-map-name="createContentFromDataResourceCtx"/>
		</if-compare>

	</simple-method>

	<simple-method method-name="updateEmailTemplate" short-description="Update Email Template">

		<entity-one entity-name="Content" value-field="content"/>
		<if-not-empty field="content">
			<set field="parameters.dataResourceId" from-field="content.dataResourceId"/>
			<entity-one entity-name="ElectronicText" value-field="electronicText" />

			<if-empty field="content.contentName">
				<if-empty field="parameters.contentName">
					<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentNameError"/>
					<string-to-list string="${tempErrorMessage}" message-field="contentName" list="error_list"/>
				</if-empty>
				<else>
					<if-empty field="parameters.contentName">
						<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentNameError"/>
						<string-to-list string="${tempErrorMessage}" message-field="contentName" list="error_list"/>
					</if-empty>
				</else>
			</if-empty>

			<if-empty field="content.description">
				<if-empty field="parameters.description">
					<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentDescriptionError"/>
					<string-to-list string="${tempErrorMessage}" message-field="description" list="error_list"/>
				</if-empty>
				<else>
					<if-empty field="parameters.description">
						<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentDescriptionError"/>
						<string-to-list string="${tempErrorMessage}" message-field="description" list="error_list"/>
					</if-empty>
				</else>
			</if-empty>

			<if-compare operator="equals" value="ELECTRONIC_TEXT" field="parameters.dataResourceTypeId">
				<if-empty field="electronicText.textData">
					<if-empty field="parameters.textData">
						<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentTextDataError"/>
						<string-to-list string="${tempErrorMessage}" message-field="textData" list="error_list"/>
					</if-empty>
					<else>
						<if-empty field="parameters.textData">
							<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentTextDataError"/>
							<string-to-list string="${tempErrorMessage}" message-field="textData" list="error_list"/>
						</if-empty>
					</else>
				</if-empty>
			</if-compare>

			<if-compare operator="equals" value="CONTEXT_FILE" field="parameters.dataResourceTypeId">
				<if-empty field="parameters.objectInfo">
					<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="filePathBlankError"/>
					<string-to-list string="${tempErrorMessage}" message-field="objectInfo" list="error_list"/>
					<else>
						<call-class-method class-name="java.lang.System" method-name="getProperty" ret-field="ofbizHome">
							<string value="ofbiz.home"/>
						</call-class-method>
						<set field="baseDir" from-field="ofbizHome" type="String"/>
						<string-append field="baseDir" string="/specialpurpose"/>
						<string-append field="baseDir" string="/uspErp/webapp/uspErp"/>
						<create-object class-name="java.io.File" field="contentFile">
							<field field="baseDir" type="String"/>
							<field field="parameters.objectInfo" type="String"/>
						</create-object>

						<call-object-method method-name="exists" obj-field="contentFile" ret-field="isContentFileExists"/>
						<if-compare operator="equals" value="false" field="isContentFileExists" type="Boolean">
							<clear-field field="argListNames"/>
							<set field="argListNames[]" from-field="parameters.objectInfo"/>
							<property-to-field field="tempErrorMessage" resource="UspErpUiLabels" property="contentFileNotExistError" arg-list-name="argListNames"/>
							<string-to-list string="${tempErrorMessage}" message-field="objectInfo" list="error_list"/>
						</if-compare>
					</else>
				</if-empty>
			</if-compare>

			<check-errors/>

			<if-compare operator="equals" value="ELECTRONIC_TEXT" field="parameters.dataResourceTypeId">
				<set field="findElectronicTextCtx.dataResourceId" from-field="parameters.dataResourceId"/>
				<find-by-primary-key value-field="electronicText" map="findElectronicTextCtx" entity-name="ElectronicText"/>
				<if-not-empty field="electronicText">
					<set-service-fields service-name="updateElectronicText" map="parameters" to-map="updateElectronicTextCtx"/>
					<call-service service-name="updateElectronicText" in-map-name="updateElectronicTextCtx"/>
					<else>
						<set-service-fields service-name="createElectronicText" map="parameters" to-map="createElectronicTextCtx"/>
						<call-service service-name="createElectronicText" in-map-name="createElectronicTextCtx"/>
					</else>
				</if-not-empty>
			</if-compare>

			<set-service-fields service-name="updateDataResource" map="parameters" to-map="updateDataResourceCtx"/>
			<call-service service-name="updateDataResource" in-map-name="updateDataResourceCtx"/>

			<now-timestamp field="lastModifiedDate"/>
			<if-compare field="parameters.statusId" operator="not-equals" value="EMAIL_PUBLISHED">
				<set field="parameters.lastModifiedDate" from-field="lastModifiedDate"/>
				<else>
					<if-empty field="content.lastModifiedDate">
						<set field="parameters.lastModifiedDate" from-field="lastModifiedDate"/>
					</if-empty>
				</else>
			</if-compare>
			<set-nonpk-fields value-field="content" map="parameters"/>
			<if-not-empty field="parameters.locale">
				<set field="content.localeString" from-field="parameters.locale" type="String"/>
			</if-not-empty>
			<store-value value-field="content"/>
		</if-not-empty>
		<field-to-result field="parameters.contentId" result-name="contentId"/>
	</simple-method>

</simple-methods>
